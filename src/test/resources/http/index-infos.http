### 지수 정보 목록 조회 테스트 (커서 기반 페이징)

### 1. 기본 목록 조회 (첫 페이지, 기본 설정)
GET http://localhost:8080/api/index-infos

### 2. 정렬 테스트 - 분류 오름차순 (기본)
GET http://localhost:8080/api/index-infos?sortField=indexClassification&sortDirection=asc&size=10

### 3. 정렬 테스트 - 분류 내림차순
GET http://localhost:8080/api/index-infos?sortField=indexClassification&sortDirection=desc&size=10

### 4. 정렬 테스트 - 지수명 오름차순
GET http://localhost:8080/api/index-infos?sortField=indexName&sortDirection=asc&size=10

### 5. 정렬 테스트 - 지수명 내림차순
GET http://localhost:8080/api/index-infos?sortField=indexName&sortDirection=desc&size=10

### 6. 즐겨찾기 필터링 - 모든 지수 (기본)
GET http://localhost:8080/api/index-infos?size=10

### 7. 즐겨찾기 필터링 - 즐겨찾기만 포함
GET http://localhost:8080/api/index-infos?favorite=true&size=10

### 8. 즐겨찾기 필터링 - 즐겨찾기 제외
GET http://localhost:8080/api/index-infos?favorite=false&size=10

### 9. 커서 기반 페이징 - 다음 페이지 조회 (idAfter 사용)
# 먼저 첫 페이지를 조회한 후, 응답의 nextIdAfter 값을 사용
GET http://localhost:8080/api/index-infos?idAfter=100&size=5



### 지수 정보 조회 테스트
GET http://localhost:8080/api/index-infos/173

### 지수 정보 요약 목록 테스트
GET http://localhost:8080/api/index-infos/summaries

### 지수 정보 등록 테스트
POST http://localhost:8080/api/index-infos
Content-Type: application/json

{
  "indexClassification": "테마분류",
  "indexName": "s&p100",
  "employedItemsCount": 100,
  "basePointInTime": "2024-01-01",
  "baseIndex": 6000.0,
  "sourceType": "USER",
  "favorite": false
}

### 지수 정보 수정 테스트 - 전체 필드 수정
PATCH http://localhost:8080/api/index-infos/194
Content-Type: application/json

{
  "employedItemsCount": 100,
  "basePointInTime": "2024-02-10",
  "baseIndex": 8000,
  "favorite": true
}

### 지수 정보 삭제 테스트

### 1. 정상 삭제 테스트 (연관 데이터 포함)
DELETE http://localhost:8080/api/index-infos/194

### 2. 존재하지 않는 ID 삭제 테스트 (에러 발생)
DELETE http://localhost:8080/api/index-infos/99999

### 3. 삭제 후 조회 테스트 (삭제 확인용)
GET http://localhost:8080/api/index-infos/194
